networks:
  coinflow_external:
    name: coinflow_external
    driver: bridge
  coinflow_internal:
    name: coinflow_internal
    external: false

services:
  coinflow_server:
    container_name: coinflow_server
    build: .
    image: coinflow_server:latest
    restart: unless-stopped
    volumes:
      - type: bind
        read_only: true
        source: ./www
        target: /opt/app/www
    ports:
      - 8080:8080
    networks:
      - coinflow_internal
      - coinflow_external
    depends_on:
      coinflow_postgres:
        condition: service_healthy
        restart: true

  coinflow_postgres:
    image: postgres:17
    container_name: coinflow_postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - coinflow_internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 3

  coinflow_pgadmin:
    image: dpage/pgadmin4:latest
    container_name: coinflow_pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - 8081:80
    networks:
      - coinflow_internal
      - coinflow_external
    healthcheck:
      test: ["CMD-SHELL", "wget -O - http://localhost:80/misc/ping"]
      interval: 10s
      timeout: 5s
      retries: 3

